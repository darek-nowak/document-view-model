plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.example.viewmodelapp"
        minSdk 23
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.example.viewmodelapp.ViewModelInstrumentationRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests {
            unitTests.returnDefaultValues = true
            all {
                useJUnitPlatform()
            }
        }
    }

    configurations.all {
        resolutionStrategy {
            force "com.squareup.okhttp3:okhttp:4.4.0"
        }
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.20'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.activity:activity-ktx:1.3.1'
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'com.google.dagger:dagger:2.28.3'


    // adds mock-maker-inline magic
    testImplementation 'org.mockito:mockito-inline:2.18.3'
    testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testImplementation 'com.google.truth:truth:1.1.2'
    testImplementation "com.google.truth.extensions:truth-java8-extension:1.0.1"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"
    testImplementation 'io.mockk:mockk:1.10.2'
    testImplementation 'junit:junit:4.+'

    kapt 'com.google.dagger:dagger-compiler:2.28.3'
    // needed to replace Daggers usage of old version of kotlinx-metadata-jvm
    // library to parse kotlin metadata
    kapt 'org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.3.0'


    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.4.0'
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"

    testImplementation 'net.bytebuddy:byte-buddy-agent:1.10.20'
    testImplementation 'net.bytebuddy:byte-buddy:1.10.20'
}